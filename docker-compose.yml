version: '3.8'

services:
  gunter:
    build: .
    container_name: gunter
    ports:
      - "6600:6600"
    environment:
      # Enable status endpoint and API docs for development
      - GUNTER_ENABLE_STATUS=true
      - GUNTER_ENABLE_API_DOCS=true
    volumes:
  - .:/app
  # Named volume for the database to persist across container restarts
  - geolite_db:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6600/api/geo-lookup/8.8.8.8"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
  # Example of a production service configuration with disabled status and docs
  gunter-prod:
    build: .
    container_name: gunter-prod
    ports:
      - "6600:6600"
    environment:
      # Disable status endpoint and API docs for production
      - GUNTER_ENABLE_STATUS=false
      - GUNTER_ENABLE_API_DOCS=false
    volumes:
  # Only use volume for database persistence
  - geolite_db:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6600/api/geo-lookup/8.8.8.8"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: gunter_test
    volumes:
      - .:/app
      - ./test_results:/app/test_results
    environment:
      - PYTEST_ADDOPTS=--color=yes
      - PYTHONPATH=/app
    command: >
      bash -c "pytest tests/ -v --junitxml=/app/test_results/junit.xml 
      --cov=. --cov-report=xml:/app/test_results/coverage.xml 
      --cov-report=html:/app/test_results/htmlcov"

  test-watch:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: gunter_test_watch
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
    command: ["pytest-watch", "--runner", "pytest tests/ -v"]

volumes:
  geolite_db:
  test_results: